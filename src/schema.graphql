type Query {
  user(id: Int!): User
  users(input: Pagination): UsersPaginated
}

type Mutation {
  createUser(input: UserInput): User
  login(input: LoginInput): LoggedUser
}

type User {
  id: Int
  name: String!
  email: String!
  birthdate: String!
  addresses: [Address]
}

type Address {
  id: Int!
  cep: String!
  street: String!
  streetNumber: String!
  complement: String
  neighborhood: String!
  city: String!
  state: String!
}

type UsersPaginated {
  total: Int
  before: Int
  after: Int
  users: [User]
}

type LoggedUser {
  user: User
  token: String
}

input UserInput {
  name: String!
  email: String!
  password: String!
  birthdate: String!
}

input LoginInput {
  email: String!
  password: String!
  rememberMe: Boolean
}

input Pagination {
  limit: Int
  offset: Int
}
